name: Deploy Container App

on:
  push:
    branches:
      - main
    paths:
      - 'container_app/**'
      - 'shared/**'

env:
  AWS_REGION: us-west-2
  LAMBDA_FUNCTION_NAME: Serverless-Inference
  AWS_ECR_REPO: apps/serverless-inference
  AWS_ROLE_TO_ASSUME: arn:aws:iam::650251730947:role/GitActionsLambdaRole

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    name: Deploy Container App
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
        role-to-assume: ${{ env.AWS_ROLE_TO_ASSUME }}
        role-session-name: GitHubActionsContainerAppDeployment

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push docker image to Amazon ECR
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: ${{ env.AWS_ECR_REPO }}
        IMAGE_TAG: latest
      run: |
        docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG ./container_app
        docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
